{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\todo-list-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from '../components/TaskForm';\nimport TaskList from '../components/TaskList';\nimport './HomePage.css'; // Assurez-vous que le fichier CSS est bien créé et lié\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  // Gestion de l'état pour les tâches\n  const [tasks, setTasks] = useState([]);\n\n  // Fonction pour ajouter une nouvelle tâche\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n\n  // Fonction pour mettre à jour une tâche existante\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n\n  // Fonction pour supprimer une tâche\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Fonction pour marquer une tâche comme complète ou incomplète\n  const toggleComplete = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      complete: !task.complete\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the To-Do List Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add a task to start organizing your daily activities.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","TaskForm","TaskList","jsxDEV","_jsxDEV","HomePage","_s","tasks","setTasks","addTask","task","updateTask","updatedTask","map","id","deleteTask","taskId","filter","toggleComplete","complete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/todo-list-app/src/pages/HomePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskForm from '../components/TaskForm';\r\nimport TaskList from '../components/TaskList';\r\nimport './HomePage.css'; // Assurez-vous que le fichier CSS est bien créé et lié\r\n\r\nfunction HomePage() {\r\n  // Gestion de l'état pour les tâches\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fonction pour ajouter une nouvelle tâche\r\n  const addTask = (task) => {\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  // Fonction pour mettre à jour une tâche existante\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\r\n  };\r\n\r\n  // Fonction pour supprimer une tâche\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  // Fonction pour marquer une tâche comme complète ou incomplète\r\n  const toggleComplete = (taskId) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === taskId ? { ...task, complete: !task.complete } : task\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <h1>Welcome to the To-Do List Application</h1>\r\n      <p>Add a task to start organizing your daily activities.</p>\r\n\r\n      {/* Formulaire d'ajout de tâches */}\r\n      <TaskForm addTask={addTask} />\r\n\r\n      {/* Liste des tâches */}\r\n      <TaskList \r\n        tasks={tasks} \r\n        updateTask={updateTask} \r\n        deleteTask={deleteTask} \r\n        toggleComplete={toggleComplete} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,IAAI,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,WAAW,IAAK;IAClCJ,QAAQ,CAACD,KAAK,CAACM,GAAG,CAACH,IAAI,IAAIA,IAAI,CAACI,EAAE,KAAKF,WAAW,CAACE,EAAE,GAAGF,WAAW,GAAGF,IAAI,CAAC,CAAC;EAC9E,CAAC;;EAED;EACA,MAAMK,UAAU,GAAIC,MAAM,IAAK;IAC7BR,QAAQ,CAACD,KAAK,CAACU,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACI,EAAE,KAAKE,MAAM,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAME,cAAc,GAAIF,MAAM,IAAK;IACjCR,QAAQ,CAACD,KAAK,CAACM,GAAG,CAACH,IAAI,IACrBA,IAAI,CAACI,EAAE,KAAKE,MAAM,GAAG;MAAE,GAAGN,IAAI;MAAES,QAAQ,EAAE,CAACT,IAAI,CAACS;IAAS,CAAC,GAAGT,IAC/D,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCjB,OAAA;MAAAiB,QAAA,EAAI;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CrB,OAAA;MAAAiB,QAAA,EAAG;IAAqD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAG5DrB,OAAA,CAACH,QAAQ;MAACQ,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG9BrB,OAAA,CAACF,QAAQ;MACPK,KAAK,EAAEA,KAAM;MACbI,UAAU,EAAEA,UAAW;MACvBI,UAAU,EAAEA,UAAW;MACvBG,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CA3CQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}