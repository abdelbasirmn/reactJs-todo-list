{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\todo-list-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks,\n  onEdit,\n  onDelete,\n  onToggleComplete\n}) {\n  _s();\n  const [filter, setFilter] = useState('all');\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'complete') return task.completed;\n    if (filter === 'incomplete') return !task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('complete'),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('incomplete'),\n        children: \"Incomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onEdit: onEdit,\n        onDelete: onDelete,\n        onToggleComplete: onToggleComplete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"W/UjwQokI5qYZ80z+yO8skpbfNg=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskItem","jsxDEV","_jsxDEV","TaskList","tasks","onEdit","onDelete","onToggleComplete","_s","filter","setFilter","filteredTasks","task","completed","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/Users/User/todo-list-app/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nfunction TaskList({ tasks, onEdit, onDelete, onToggleComplete }) {\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'complete') return task.completed;\r\n    if (filter === 'incomplete') return !task.completed;\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"filters\">\r\n        <button onClick={() => setFilter('all')}>All</button>\r\n        <button onClick={() => setFilter('complete')}>Complete</button>\r\n        <button onClick={() => setFilter('incomplete')}>Incomplete</button>\r\n      </div>\r\n      <div className=\"task-list\">\r\n        {filteredTasks.map(task => (\r\n          <TaskItem\r\n            key={task.id}\r\n            task={task}\r\n            onEdit={onEdit}\r\n            onDelete={onDelete}\r\n            onToggleComplete={onToggleComplete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,aAAa,GAAGP,KAAK,CAACK,MAAM,CAACG,IAAI,IAAI;IACzC,IAAIH,MAAM,KAAK,UAAU,EAAE,OAAOG,IAAI,CAACC,SAAS;IAChD,IAAIJ,MAAM,KAAK,YAAY,EAAE,OAAO,CAACG,IAAI,CAACC,SAAS;IACnD,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtBZ,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMN,SAAS,CAAC,KAAK,CAAE;QAAAI,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDlB,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMN,SAAS,CAAC,UAAU,CAAE;QAAAI,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/DlB,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMN,SAAS,CAAC,YAAY,CAAE;QAAAI,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAD,QAAA,EACvBH,aAAa,CAACU,GAAG,CAACT,IAAI,iBACrBV,OAAA,CAACF,QAAQ;QAEPY,IAAI,EAAEA,IAAK;QACXP,MAAM,EAAEA,MAAO;QACfC,QAAQ,EAAEA,QAAS;QACnBC,gBAAgB,EAAEA;MAAiB,GAJ9BK,IAAI,CAACU,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CA7BQL,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}