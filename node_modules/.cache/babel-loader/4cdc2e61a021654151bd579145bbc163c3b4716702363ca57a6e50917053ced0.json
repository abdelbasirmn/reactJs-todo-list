{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\todo-list-app\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\n\n/**\r\n * Composant pour afficher une tâche avec des options pour la modifier, la supprimer ou basculer son statut.\r\n * @param {object} task - La tâche à afficher.\r\n * @param {function} updateTask - Fonction pour mettre à jour la tâche.\r\n * @param {function} deleteTask - Fonction pour supprimer la tâche.\r\n * @param {function} toggleComplete - Fonction pour basculer le statut de complétion de la tâche.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task,\n  updateTask,\n  deleteTask,\n  toggleComplete\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.complete ? 'complete' : ''}`,\n    children: isEditing ? /*#__PURE__*/_jsxDEV(TaskForm, {\n      taskToEdit: task,\n      updateTask: updateTask,\n      addTask: () => {} // addTask n'est pas utilisé ici\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: task.complete ? 'task-title-complete' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: task.complete ? 'task-desc-complete' : '',\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleComplete(task.id),\n          children: task.complete ? 'Mark as Incomplete' : 'Mark as Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(!isEditing),\n          children: isEditing ? 'Annuler' : 'Modifier'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","TaskForm","jsxDEV","_jsxDEV","TaskItem","task","updateTask","deleteTask","toggleComplete","_s","isEditing","setIsEditing","className","complete","children","taskToEdit","addTask","fileName","_jsxFileName","lineNumber","columnNumber","title","description","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/User/todo-list-app/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskForm from './TaskForm';\r\n\r\n/**\r\n * Composant pour afficher une tâche avec des options pour la modifier, la supprimer ou basculer son statut.\r\n * @param {object} task - La tâche à afficher.\r\n * @param {function} updateTask - Fonction pour mettre à jour la tâche.\r\n * @param {function} deleteTask - Fonction pour supprimer la tâche.\r\n * @param {function} toggleComplete - Fonction pour basculer le statut de complétion de la tâche.\r\n */\r\nfunction TaskItem({ task, updateTask, deleteTask, toggleComplete }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  return (\r\n    <div className={`task-item ${task.complete ? 'complete' : ''}`}>\r\n      {isEditing ? (\r\n        <TaskForm \r\n          taskToEdit={task} \r\n          updateTask={updateTask} \r\n          addTask={() => {}} // addTask n'est pas utilisé ici\r\n        />\r\n      ) : (\r\n        <div className=\"task-content\">\r\n          <div className=\"task-details\">\r\n            <h3 className={task.complete ? 'task-title-complete' : ''}>{task.title}</h3>\r\n            <p className={task.complete ? 'task-desc-complete' : ''}>{task.description}</p>\r\n          </div>\r\n          <div className=\"task-actions\">\r\n            <button onClick={() => toggleComplete(task.id)}>\r\n              {task.complete ? 'Mark as Incomplete' : 'Mark as Complete'}\r\n            </button>\r\n            <button onClick={() => setIsEditing(!isEditing)}>\r\n              {isEditing ? 'Annuler' : 'Modifier'}\r\n            </button>\r\n            <button onClick={() => deleteTask(task.id)}>Supprimer</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEG,OAAA;IAAKS,SAAS,EAAE,aAAaP,IAAI,CAACQ,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAC,QAAA,EAC5DJ,SAAS,gBACRP,OAAA,CAACF,QAAQ;MACPc,UAAU,EAAEV,IAAK;MACjBC,UAAU,EAAEA,UAAW;MACvBU,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,gBAEFjB,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAE,QAAA,gBAC3BX,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAE,QAAA,gBAC3BX,OAAA;UAAIS,SAAS,EAAEP,IAAI,CAACQ,QAAQ,GAAG,qBAAqB,GAAG,EAAG;UAAAC,QAAA,EAAET,IAAI,CAACgB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5EjB,OAAA;UAAGS,SAAS,EAAEP,IAAI,CAACQ,QAAQ,GAAG,oBAAoB,GAAG,EAAG;UAAAC,QAAA,EAAET,IAAI,CAACiB;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACNjB,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAE,QAAA,gBAC3BX,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAACH,IAAI,CAACmB,EAAE,CAAE;UAAAV,QAAA,EAC5CT,IAAI,CAACQ,QAAQ,GAAG,oBAAoB,GAAG;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACTjB,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAAC,CAACD,SAAS,CAAE;UAAAI,QAAA,EAC7CJ,SAAS,GAAG,SAAS,GAAG;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACTjB,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACF,IAAI,CAACmB,EAAE,CAAE;UAAAV,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CA9BQL,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}