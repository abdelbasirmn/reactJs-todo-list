{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\todo-list-app\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task,\n  updateTask,\n  deleteTask,\n  toggleComplete\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const handleUpdate = () => {\n    updateTask({\n      ...task,\n      title,\n      description\n    });\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.complete ? 'complete' : ''}`,\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleComplete(task.id),\n      children: task.complete ? 'Mark Incomplete' : 'Mark Complete'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTask(task.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"u+p6AWuRSxSGOaPkZnVRzOskszc=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","task","updateTask","deleteTask","toggleComplete","_s","isEditing","setIsEditing","title","setTitle","description","setDescription","handleUpdate","className","complete","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/User/todo-list-app/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TaskItem({ task, updateTask, deleteTask, toggleComplete }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n\r\n  const handleUpdate = () => {\r\n    updateTask({ ...task, title, description });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${task.complete ? 'complete' : ''}`}>\r\n      {isEditing ? (\r\n        <>\r\n          <input \r\n            type=\"text\" \r\n            value={title} \r\n            onChange={(e) => setTitle(e.target.value)} \r\n          />\r\n          <textarea \r\n            value={description} \r\n            onChange={(e) => setDescription(e.target.value)} \r\n          />\r\n          <button onClick={handleUpdate}>Save</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n        </>\r\n      )}\r\n      <button onClick={() => toggleComplete(task.id)}>\r\n        {task.complete ? 'Mark Incomplete' : 'Mark Complete'}\r\n      </button>\r\n      <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}