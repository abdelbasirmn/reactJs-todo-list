{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\todo-list-app\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\r\n * Formulaire pour ajouter ou modifier une tâche.\r\n * @param {function} addTask - Fonction pour ajouter une tâche.\r\n * @param {object} [taskToEdit] - Tâche à éditer (optionnel).\r\n * @param {function} updateTask - Fonction pour mettre à jour une tâche (optionnel).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  addTask,\n  taskToEdit,\n  updateTask\n}) {\n  _s();\n  const [title, setTitle] = useState(taskToEdit ? taskToEdit.title : '');\n  const [description, setDescription] = useState(taskToEdit ? taskToEdit.description : '');\n\n  // Gérer l'envoi du formulaire\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title && description) {\n      const newTask = {\n        id: taskToEdit ? taskToEdit.id : Date.now(),\n        title,\n        description,\n        complete: taskToEdit ? taskToEdit.complete : false\n      };\n      if (taskToEdit) {\n        updateTask(newTask);\n      } else {\n        addTask(newTask);\n      }\n      setTitle('');\n      setDescription('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Task Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: taskToEdit ? 'Update Task' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"yX0eY69eAXOezhEpLYVanZAWRxg=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","addTask","taskToEdit","updateTask","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","newTask","id","Date","now","complete","onSubmit","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/todo-list-app/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n/**\r\n * Formulaire pour ajouter ou modifier une tâche.\r\n * @param {function} addTask - Fonction pour ajouter une tâche.\r\n * @param {object} [taskToEdit] - Tâche à éditer (optionnel).\r\n * @param {function} updateTask - Fonction pour mettre à jour une tâche (optionnel).\r\n */\r\nfunction TaskForm({ addTask, taskToEdit, updateTask }) {\r\n  const [title, setTitle] = useState(taskToEdit ? taskToEdit.title : '');\r\n  const [description, setDescription] = useState(taskToEdit ? taskToEdit.description : '');\r\n\r\n  // Gérer l'envoi du formulaire\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title && description) {\r\n      const newTask = {\r\n        id: taskToEdit ? taskToEdit.id : Date.now(),\r\n        title,\r\n        description,\r\n        complete: taskToEdit ? taskToEdit.complete : false\r\n      };\r\n      if (taskToEdit) {\r\n        updateTask(newTask);\r\n      } else {\r\n        addTask(newTask);\r\n      }\r\n      setTitle('');\r\n      setDescription('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"task-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Task Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Task Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <button type=\"submit\">{taskToEdit ? 'Update Task' : 'Add Task'}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,QAAQA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACK,UAAU,GAAGA,UAAU,CAACG,KAAK,GAAG,EAAE,CAAC;EACtE,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACK,UAAU,GAAGA,UAAU,CAACK,WAAW,GAAG,EAAE,CAAC;;EAExF;EACA,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIN,KAAK,IAAIE,WAAW,EAAE;MACxB,MAAMK,OAAO,GAAG;QACdC,EAAE,EAAEX,UAAU,GAAGA,UAAU,CAACW,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC3CV,KAAK;QACLE,WAAW;QACXS,QAAQ,EAAEd,UAAU,GAAGA,UAAU,CAACc,QAAQ,GAAG;MAC/C,CAAC;MACD,IAAId,UAAU,EAAE;QACdC,UAAU,CAACS,OAAO,CAAC;MACrB,CAAC,MAAM;QACLX,OAAO,CAACW,OAAO,CAAC;MAClB;MACAN,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACET,OAAA;IAAMkB,QAAQ,EAAER,YAAa;IAACS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjDpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAGb,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF7B,OAAA;MACEsB,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEf,WAAY;MACnBgB,QAAQ,EAAGb,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACF7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEjB,UAAU,GAAG,aAAa,GAAG;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX;AAACxB,EAAA,CAxCQJ,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}