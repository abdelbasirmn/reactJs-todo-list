{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\todo-list-app\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task,\n  updateTask,\n  deleteTask,\n  toggleComplete\n}) {\n  _s();\n  // État pour gérer l'édition\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n\n  // Fonction pour gérer la mise à jour de la tâche\n  const handleUpdate = () => {\n    if (title.trim() && description.trim()) {\n      updateTask({\n        ...task,\n        title,\n        description\n      });\n      setIsEditing(false); // Fin du mode édition\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.complete ? 'complete' : ''}`,\n    children: [isEditing ?\n    /*#__PURE__*/\n    // Formulaire de modification de la tâche\n    _jsxDEV(\"div\", {\n      className: \"task-edit-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Edit title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Edit description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Affichage de la tâche non modifiée\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleComplete(task.id),\n      children: task.complete ? 'Mark Incomplete' : 'Mark Complete'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTask(task.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"u+p6AWuRSxSGOaPkZnVRzOskszc=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","task","updateTask","deleteTask","toggleComplete","_s","isEditing","setIsEditing","title","setTitle","description","setDescription","handleUpdate","trim","className","complete","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/User/todo-list-app/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TaskItem({ task, updateTask, deleteTask, toggleComplete }) {\r\n  // État pour gérer l'édition\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n\r\n  // Fonction pour gérer la mise à jour de la tâche\r\n  const handleUpdate = () => {\r\n    if (title.trim() && description.trim()) {\r\n      updateTask({ ...task, title, description });\r\n      setIsEditing(false); // Fin du mode édition\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${task.complete ? 'complete' : ''}`}>\r\n      {isEditing ? (\r\n        // Formulaire de modification de la tâche\r\n        <div className=\"task-edit-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Edit title\"\r\n          />\r\n          <textarea\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Edit description\"\r\n          />\r\n          <button onClick={handleUpdate}>Save</button>\r\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\r\n        </div>\r\n      ) : (\r\n        // Affichage de la tâche non modifiée\r\n        <>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n        </>\r\n      )}\r\n      <button onClick={() => toggleComplete(task.id)}>\r\n        {task.complete ? 'Mark Incomplete' : 'Mark Complete'}\r\n      </button>\r\n      <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}